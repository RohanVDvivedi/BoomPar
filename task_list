SMART_POINTER
 * create a smart_pointer for int as an illustration for implementation of smart_pointer capable type and use it in testcases for smart_pointer, using it as job parameters

FUTURE
 * make job input params, output values and the promise as smart_pointer objects

SYNC_COROUTINE_PIPE
 * implement sync_coroutine_pipe api like the sync_queue without non_blocking access

COROUTINE
 * COROUTINE_EXECUTOR - a duplicate of fixed thread count executor but to run only coroutines, it starts all threads at once
 * COROUTINE - a wrapper for functions with void func(void* param)